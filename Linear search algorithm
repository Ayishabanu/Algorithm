Linear Search is defined as a sequential search algorithm that starts at one end and goes through each element of a list until the desired element is found,
otherwise the search continues till the end of the data set. It is the easiest searching algorithm

Follow the below idea to solve the problem:

Iterate from 0 to N-1 and compare the value of every index with x if they match return index

 Follow the given steps to solve the problem:

Start from the leftmost element of arr[] and one by one compare x with each element of arr[]
If x matches with an element, return the index.
If x doesnâ€™t match with any of the elements, return -1.

Input: arr[] = {10, 20, 80, 30, 60, 50,110, 100, 130, 170}, x = 110;
Output: 6
Explanation: Element x is present at index 6

Input: arr[] = {10, 20, 80, 30, 60, 50,110, 100, 130, 170}, x = 175;
Output: -1
Explanation: Element x is not present in arr[].


#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution{
    public:
 
    int search(int arr[], int N, int X)
    {
        
        int search(int arr[], int N, int X)

    {
        for(int i=0;i<N;i++)

        {

            if(arr[i]==X)
            {
                return i;
            }
        }
        return -1;
    }
    }
};

int main()
{
    int testcases;
    cin>>testcases;
    while(testcases--)
    {
        int sizeOfArray;
        cin>>sizeOfArray;
        int arr[sizeOfArray];
        int x;
        
        for(int i=0;i<sizeOfArray;i++)
        {
            cin>>arr[i];
        }
        cin>>x;
        Solution ob;
        cout<<ob.search(arr,sizeOfArray,x)<<endl; //Linear search
    }

    return 0;
    
}
